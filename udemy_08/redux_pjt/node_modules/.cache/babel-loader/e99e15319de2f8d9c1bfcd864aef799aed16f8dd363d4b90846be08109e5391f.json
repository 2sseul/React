{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\SSAFY\\\\Desktop\\\\Project\\\\React\\\\udemy_08\\\\redux_pjt\\\\src\\\\components\\\\Counter.js\",\n  _s = $RefreshSig$();\nimport { useSelector, useDispatch } from \"react-redux\";\n//useSelector: 저장소가 관리하는 상태 부분을 자동으로 선택할 수 있다.\n\nimport classes from \"./Counter.module.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Counter = () => {\n  _s();\n  //어떤 인자도 전달하지 않고 대신 실행할 수 있는 dispatch function\n  //redux store에 대한 action을 보낸다.\n  const dispatch = useDispatch();\n  //저장소에서 추출하려는 데이터 부분 결정\n  const counter = useSelector(state => state.counter);\n  const show = useSelector(state => state.showCounter);\n  const increaseHandler = () => {\n    dispatch({\n      type: \"increase\",\n      amount: 5\n    });\n  };\n  const incrementHandler = () => {\n    dispatch({\n      type: \"increment\"\n    });\n  };\n  const decrementHandler = () => {\n    dispatch({\n      type: \"decrement\"\n    });\n  };\n\n  //toggle로 숨기고 보여지게 하는 것은 useState사용해서 관리해야한다.\n  //왜냐믄요 이 컴포넌트에서만 쓰는거니까요...!(local state)\n  const toggleCounterHandler = () => {\n    dispatch({\n      type: \"toggle\"\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"main\", {\n    className: classes.counter,\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Redux Counter\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this), show && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.value,\n      children: counter\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 16\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: incrementHandler,\n        children: \"Increment\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: increaseHandler,\n        children: \"Increase by 5\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: decrementHandler,\n        children: \"Decrement\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: toggleCounterHandler,\n      children: \"Toggle Counter\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 5\n  }, this);\n};\n_s(Counter, \"a6W6bcAuHVADZPU2xn93xNQZltc=\", false, function () {\n  return [useDispatch, useSelector, useSelector];\n});\n_c = Counter;\nexport default Counter;\nvar _c;\n$RefreshReg$(_c, \"Counter\");","map":{"version":3,"names":["useSelector","useDispatch","classes","Counter","dispatch","counter","state","show","showCounter","increaseHandler","type","amount","incrementHandler","decrementHandler","toggleCounterHandler","value"],"sources":["C:/Users/SSAFY/Desktop/Project/React/udemy_08/redux_pjt/src/components/Counter.js"],"sourcesContent":["import { useSelector, useDispatch } from \"react-redux\";\n//useSelector: 저장소가 관리하는 상태 부분을 자동으로 선택할 수 있다.\n\nimport classes from \"./Counter.module.css\";\n\nconst Counter = () => {\n  //어떤 인자도 전달하지 않고 대신 실행할 수 있는 dispatch function\n  //redux store에 대한 action을 보낸다.\n  const dispatch = useDispatch();\n  //저장소에서 추출하려는 데이터 부분 결정\n  const counter = useSelector((state) => state.counter);\n\n  const show = useSelector((state) => state.showCounter);\n\n  const increaseHandler = () => {\n    dispatch({\n      type: \"increase\",\n      amount: 5,\n    });\n  };\n\n  const incrementHandler = () => {\n    dispatch({ type: \"increment\" });\n  };\n\n  const decrementHandler = () => {\n    dispatch({ type: \"decrement\" });\n  };\n\n  //toggle로 숨기고 보여지게 하는 것은 useState사용해서 관리해야한다.\n  //왜냐믄요 이 컴포넌트에서만 쓰는거니까요...!(local state)\n  const toggleCounterHandler = () => {\n    dispatch({ type: \"toggle\" });\n  };\n\n  return (\n    <main className={classes.counter}>\n      <h1>Redux Counter</h1>\n\n      {show && <div className={classes.value}>{counter}</div>}\n      <div>\n        <button onClick={incrementHandler}>Increment</button>\n        <button onClick={increaseHandler}>Increase by 5</button>\n        <button onClick={decrementHandler}>Decrement</button>\n      </div>\n      <button onClick={toggleCounterHandler}>Toggle Counter</button>\n    </main>\n  );\n};\n\nexport default Counter;\n"],"mappings":";;AAAA,SAASA,WAAW,EAAEC,WAAW,QAAQ,aAAa;AACtD;;AAEA,OAAOC,OAAO,MAAM,sBAAsB;AAAC;AAE3C,MAAMC,OAAO,GAAG,MAAM;EAAA;EACpB;EACA;EACA,MAAMC,QAAQ,GAAGH,WAAW,EAAE;EAC9B;EACA,MAAMI,OAAO,GAAGL,WAAW,CAAEM,KAAK,IAAKA,KAAK,CAACD,OAAO,CAAC;EAErD,MAAME,IAAI,GAAGP,WAAW,CAAEM,KAAK,IAAKA,KAAK,CAACE,WAAW,CAAC;EAEtD,MAAMC,eAAe,GAAG,MAAM;IAC5BL,QAAQ,CAAC;MACPM,IAAI,EAAE,UAAU;MAChBC,MAAM,EAAE;IACV,CAAC,CAAC;EACJ,CAAC;EAED,MAAMC,gBAAgB,GAAG,MAAM;IAC7BR,QAAQ,CAAC;MAAEM,IAAI,EAAE;IAAY,CAAC,CAAC;EACjC,CAAC;EAED,MAAMG,gBAAgB,GAAG,MAAM;IAC7BT,QAAQ,CAAC;MAAEM,IAAI,EAAE;IAAY,CAAC,CAAC;EACjC,CAAC;;EAED;EACA;EACA,MAAMI,oBAAoB,GAAG,MAAM;IACjCV,QAAQ,CAAC;MAAEM,IAAI,EAAE;IAAS,CAAC,CAAC;EAC9B,CAAC;EAED,oBACE;IAAM,SAAS,EAAER,OAAO,CAACG,OAAQ;IAAA,wBAC/B;MAAA,UAAI;IAAa;MAAA;MAAA;MAAA;IAAA,QAAK,EAErBE,IAAI,iBAAI;MAAK,SAAS,EAAEL,OAAO,CAACa,KAAM;MAAA,UAAEV;IAAO;MAAA;MAAA;MAAA;IAAA,QAAO,eACvD;MAAA,wBACE;QAAQ,OAAO,EAAEO,gBAAiB;QAAA,UAAC;MAAS;QAAA;QAAA;QAAA;MAAA,QAAS,eACrD;QAAQ,OAAO,EAAEH,eAAgB;QAAA,UAAC;MAAa;QAAA;QAAA;QAAA;MAAA,QAAS,eACxD;QAAQ,OAAO,EAAEI,gBAAiB;QAAA,UAAC;MAAS;QAAA;QAAA;QAAA;MAAA,QAAS;IAAA;MAAA;MAAA;MAAA;IAAA,QACjD,eACN;MAAQ,OAAO,EAAEC,oBAAqB;MAAA,UAAC;IAAc;MAAA;MAAA;MAAA;IAAA,QAAS;EAAA;IAAA;IAAA;IAAA;EAAA,QACzD;AAEX,CAAC;AAAC,GA3CIX,OAAO;EAAA,QAGMF,WAAW,EAEZD,WAAW,EAEdA,WAAW;AAAA;AAAA,KAPpBG,OAAO;AA6Cb,eAAeA,OAAO;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}