{"ast":null,"code":"var _jsxFileName = \"/Users/kimeaseul/Desktop/React/udemy_07/src/App.js\";\nimport React from \"react\";\nimport MoviesList from \"./components/MoviesList\";\nimport \"./App.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  function fetchMoviesHandler() {\n    //fetch는 브라우저가 사용할 수 있게 해주는 함수 (Fetch API)\n    //두번째 인자를 통해 다양한 선택사항 지정할 수 있는 자바스크립트 객체를 전달할 수 있다.\n    //header , body, http요청 메소드의 변경 등\n    //하지만 여기서는 기본적으로 get 요청 보내고, get 요청으로 원하는거 할 수 있기 떄문에 필요없다 ~\n    //fetch함수는 promise 객체 만드는데, 이 객체는 우리가 잠재적으로 발생할 수 있는 오류나 호출에 대한 응답에 반응할 수 있게 해준다.\n    //Http 전송 방법 = 비동기식. 비동기식은 코드의 결과를 바로 확인하거나 사용할 수 없다. 대신 미래의 어느 시점에서 확인 가능.\n    //프로미스 객체가 있는 이유가 바로, 어느 시점에서 확인 가능하게 하려고.\n    fetch(\"https://swapi.dev/api/films/\").then(response => {});\n    //fetch뒤에 .then()함수 추가하면 응답을 받을 때 호출된다.\n    //그 뒤에 .catch()써서 잠재적 오류를 잡을 수 있음.(여기서 일단 넘김ㄴ)\n  }\n\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"section\", {\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        children: \"Fetch Movies\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n      children: /*#__PURE__*/_jsxDEV(MoviesList, {\n        movies: dummyMovies\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 5\n  }, this);\n}\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","MoviesList","App","fetchMoviesHandler","fetch","then","response","dummyMovies"],"sources":["/Users/kimeaseul/Desktop/React/udemy_07/src/App.js"],"sourcesContent":["import React from \"react\";\n\nimport MoviesList from \"./components/MoviesList\";\nimport \"./App.css\";\n\nfunction App() {\n  function fetchMoviesHandler() {\n    //fetch는 브라우저가 사용할 수 있게 해주는 함수 (Fetch API)\n    //두번째 인자를 통해 다양한 선택사항 지정할 수 있는 자바스크립트 객체를 전달할 수 있다.\n    //header , body, http요청 메소드의 변경 등\n    //하지만 여기서는 기본적으로 get 요청 보내고, get 요청으로 원하는거 할 수 있기 떄문에 필요없다 ~\n    //fetch함수는 promise 객체 만드는데, 이 객체는 우리가 잠재적으로 발생할 수 있는 오류나 호출에 대한 응답에 반응할 수 있게 해준다.\n    //Http 전송 방법 = 비동기식. 비동기식은 코드의 결과를 바로 확인하거나 사용할 수 없다. 대신 미래의 어느 시점에서 확인 가능.\n    //프로미스 객체가 있는 이유가 바로, 어느 시점에서 확인 가능하게 하려고.\n    fetch(\"https://swapi.dev/api/films/\").then((response) => {});\n    //fetch뒤에 .then()함수 추가하면 응답을 받을 때 호출된다.\n    //그 뒤에 .catch()써서 잠재적 오류를 잡을 수 있음.(여기서 일단 넘김ㄴ)\n  }\n\n  return (\n    <React.Fragment>\n      <section>\n        <button>Fetch Movies</button>\n      </section>\n      <section>\n        <MoviesList movies={dummyMovies} />\n      </section>\n    </React.Fragment>\n  );\n}\n\nexport default App;\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,OAAOC,UAAU,MAAM,yBAAyB;AAChD,OAAO,WAAW;AAAC;AAEnB,SAASC,GAAG,GAAG;EACb,SAASC,kBAAkB,GAAG;IAC5B;IACA;IACA;IACA;IACA;IACA;IACA;IACAC,KAAK,CAAC,8BAA8B,CAAC,CAACC,IAAI,CAAEC,QAAQ,IAAK,CAAC,CAAC,CAAC;IAC5D;IACA;EACF;;EAEA,oBACE,QAAC,KAAK,CAAC,QAAQ;IAAA,wBACb;MAAA,uBACE;QAAA,UAAQ;MAAY;QAAA;QAAA;QAAA;MAAA;IAAS;MAAA;MAAA;MAAA;IAAA,QACrB,eACV;MAAA,uBACE,QAAC,UAAU;QAAC,MAAM,EAAEC;MAAY;QAAA;QAAA;QAAA;MAAA;IAAG;MAAA;MAAA;MAAA;IAAA,QAC3B;EAAA;IAAA;IAAA;IAAA;EAAA,QACK;AAErB;AAAC,KAxBQL,GAAG;AA0BZ,eAAeA,GAAG;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}